version: '3.8'

volumes:
  database-data-dev:
  rabbitmq-data-dev:

services:
  frontend:
    ports:
      - '3000:3000'
    build:
      context: ../frontend
      target: development
    volumes:
      - ../frontend:/app
      - /app/node_modules
    command: >
      sh -c "cd /app && npm run dev"
  backend:
    build:
      context: ../backend
      target: development
    volumes:
      - ../backend:/app
      - /app/node_modules
    depends_on:
      database:
        condition: service_started
      rabbitmq:
        condition: service_healthy
    command: >
      sh -c "cd /app && npx mikro-orm migration:up && npm run dev"
  mailer:
    build:
      context: ../mailer
      target: development
    restart: on-failure
    volumes:
      - ../mailer:/app
      - /app/node_modules
  rabbitmq:
    volumes:
      - ./etc/rabbitmq/definitions.json:/etc/rabbitmq/definitions.json
      - rabbitmq-data-dev:/var/lib/rabbitmq
  database:
    deploy:
      restart_policy:
        condition: on-failure
    volumes:
      - database-data-dev:${PGDATA}
